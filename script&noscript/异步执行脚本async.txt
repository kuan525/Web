加载外部代码会浪费一些时间，有时候这些外部代码的加载时间根本不可控，比如存放在第三方服务器的数据跟踪代码，如果HTML的解析为了等待代码的加载而暂停了下来，这样用户体验就不是很好了。
  HTML解析➡获取脚本，执行脚本➡HTML 解析
对于不依赖于其他文件或者本身没有任何依赖关系的代码文件，async属性将会非常有用，因为我们并不在意它什么时候被执行。
同样的，async属性只能用于外部代码文件，它对文档内嵌代码根部不起作用。
最后，使用async属性会导致多个代码执行次序不可控（反正谁先加载完，谁就先被执行），因为如果代码中使用了其他代码定义的函数或值 ，async属性就不适用了。